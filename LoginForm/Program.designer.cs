#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LoginForm
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="OOADloginform")]
	public partial class ProgramDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBranch_info(Branch_info instance);
    partial void UpdateBranch_info(Branch_info instance);
    partial void DeleteBranch_info(Branch_info instance);
    partial void InsertUser_Info(User_Info instance);
    partial void UpdateUser_Info(User_Info instance);
    partial void DeleteUser_Info(User_Info instance);
    #endregion
		
		public ProgramDataContext() : 
				base(global::LoginForm.Properties.Settings.Default.OOADloginformConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ProgramDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProgramDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProgramDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProgramDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Branch_info> Branch_infos
		{
			get
			{
				return this.GetTable<Branch_info>();
			}
		}
		
		public System.Data.Linq.Table<User_Info> User_Infos
		{
			get
			{
				return this.GetTable<User_Info>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Branch_info")]
	public partial class Branch_info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _B_id;
		
		private string _B_name;
		
		private EntitySet<User_Info> _User_Infos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnB_idChanging(int value);
    partial void OnB_idChanged();
    partial void OnB_nameChanging(string value);
    partial void OnB_nameChanged();
    #endregion
		
		public Branch_info()
		{
			this._User_Infos = new EntitySet<User_Info>(new Action<User_Info>(this.attach_User_Infos), new Action<User_Info>(this.detach_User_Infos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int B_id
		{
			get
			{
				return this._B_id;
			}
			set
			{
				if ((this._B_id != value))
				{
					this.OnB_idChanging(value);
					this.SendPropertyChanging();
					this._B_id = value;
					this.SendPropertyChanged("B_id");
					this.OnB_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_name", DbType="NVarChar(20)")]
		public string B_name
		{
			get
			{
				return this._B_name;
			}
			set
			{
				if ((this._B_name != value))
				{
					this.OnB_nameChanging(value);
					this.SendPropertyChanging();
					this._B_name = value;
					this.SendPropertyChanged("B_name");
					this.OnB_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_info_User_Info", Storage="_User_Infos", ThisKey="B_id", OtherKey="B_id")]
		public EntitySet<User_Info> User_Infos
		{
			get
			{
				return this._User_Infos;
			}
			set
			{
				this._User_Infos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User_Infos(User_Info entity)
		{
			this.SendPropertyChanging();
			entity.Branch_info = this;
		}
		
		private void detach_User_Infos(User_Info entity)
		{
			this.SendPropertyChanging();
			entity.Branch_info = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Info")]
	public partial class User_Info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _U_id;
		
		private System.Nullable<int> _B_id;
		
		private string _Uname;
		
		private System.Nullable<int> _Uage;
		
		private string _Umail;
		
		private EntityRef<Branch_info> _Branch_info;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnU_idChanging(int value);
    partial void OnU_idChanged();
    partial void OnB_idChanging(System.Nullable<int> value);
    partial void OnB_idChanged();
    partial void OnUnameChanging(string value);
    partial void OnUnameChanged();
    partial void OnUageChanging(System.Nullable<int> value);
    partial void OnUageChanged();
    partial void OnUmailChanging(string value);
    partial void OnUmailChanged();
    #endregion
		
		public User_Info()
		{
			this._Branch_info = default(EntityRef<Branch_info>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int U_id
		{
			get
			{
				return this._U_id;
			}
			set
			{
				if ((this._U_id != value))
				{
					this.OnU_idChanging(value);
					this.SendPropertyChanging();
					this._U_id = value;
					this.SendPropertyChanged("U_id");
					this.OnU_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_id", DbType="Int")]
		public System.Nullable<int> B_id
		{
			get
			{
				return this._B_id;
			}
			set
			{
				if ((this._B_id != value))
				{
					if (this._Branch_info.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnB_idChanging(value);
					this.SendPropertyChanging();
					this._B_id = value;
					this.SendPropertyChanged("B_id");
					this.OnB_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uname", DbType="NVarChar(20)")]
		public string Uname
		{
			get
			{
				return this._Uname;
			}
			set
			{
				if ((this._Uname != value))
				{
					this.OnUnameChanging(value);
					this.SendPropertyChanging();
					this._Uname = value;
					this.SendPropertyChanged("Uname");
					this.OnUnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uage", DbType="Int")]
		public System.Nullable<int> Uage
		{
			get
			{
				return this._Uage;
			}
			set
			{
				if ((this._Uage != value))
				{
					this.OnUageChanging(value);
					this.SendPropertyChanging();
					this._Uage = value;
					this.SendPropertyChanged("Uage");
					this.OnUageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Umail", DbType="NVarChar(20)")]
		public string Umail
		{
			get
			{
				return this._Umail;
			}
			set
			{
				if ((this._Umail != value))
				{
					this.OnUmailChanging(value);
					this.SendPropertyChanging();
					this._Umail = value;
					this.SendPropertyChanged("Umail");
					this.OnUmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_info_User_Info", Storage="_Branch_info", ThisKey="B_id", OtherKey="B_id", IsForeignKey=true)]
		public Branch_info Branch_info
		{
			get
			{
				return this._Branch_info.Entity;
			}
			set
			{
				Branch_info previousValue = this._Branch_info.Entity;
				if (((previousValue != value) 
							|| (this._Branch_info.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch_info.Entity = null;
						previousValue.User_Infos.Remove(this);
					}
					this._Branch_info.Entity = value;
					if ((value != null))
					{
						value.User_Infos.Add(this);
						this._B_id = value.B_id;
					}
					else
					{
						this._B_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Branch_info");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
